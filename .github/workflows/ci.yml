name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - update-ci
    tags: '*'

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1' # Replace this with the minimum Julia version that your package supports.
          - '1.6'
          - 'nightly'
        os:
          - ubuntu-latest
          # - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1

#   docs:
#     name: Documentation
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: julia-actions/setup-julia@v1
#         with:
#           version: '1.6'
#       - run: |
#           julia --project=docs -e '
#             using Pkg
#             Pkg.develop(PackageSpec(path=pwd()))
#             Pkg.instantiate()'
#       - run: |
#           julia --project=docs/ -e '
#             using DaggerFlux
#             # using Pkg; Pkg.activate("docs")
#             using Documenter
#             using Documenter: doctest
#             DocMeta.setdocmeta!(DaggerFlux, :DocTestSetup, :(using DaggerFlux); recursive=true)
#             doctest(DaggerFlux)'
#       - run: julia --project=docs docs/make.jl
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
